#!/usr/bin/env python

import sys


CREATE_ROUTE = "SELECT create_route ('%s', %i, '%s');"
CREATE_AS_SET = "SELECT create_as_set ('%s', '%s', '%s');"



def sqlEmitter():

    print 'BEGIN;'
    i = 0

    while True:
        stm = yield None
        if stm:
            print stm
            i += 1
            if i % 5000 == 0:
                print 'COMMIT;'
                print 'BEGIN;'
        else:
            print 'COMMIT;'
            break


def main():

    import irrparser

#    se = sqlEmitter()
#    se.next() # need to start generator first
#    sqlEmit = se.send

    parser = irrparser.irrParser(sys.stdin)

    for obj, values in parser:

        if obj == irrparser.AS_SET:
            members = '{' + ','.join(values[1]) + '}' # convert to postgresql array syntax
            stm = CREATE_AS_SET % (values[0], members, values[2])
        elif obj == irrparser.ROUTE:
            stm = CREATE_ROUTE % values

#        sqlEmit(stm);
        print stm

#    try:
#        sqlEmit(None) # so get the last commit with us
#    except StopIteration:
#        pass # expected


if __name__ == '__main__':
    sys.path.insert(0, '../irrexplorer') # hack on :-)
    main()

